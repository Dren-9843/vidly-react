{"version":3,"sources":["components/common/pagination.jsx","components/common/listGroup.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","services/httpService.js","services/authService.js","components/moviesTable.jsx","utils/paginate.js","services/movieService.js","components/common/searchBox.jsx","services/genreService.js","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","Math","ceil","pages","_","range","className","map","page","onClick","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","key","Component","TableBody","renderCell","content","get","createKey","_id","data","Table","Like","classes","liked","style","cursor","aria-hidden","axios","defaults","baseURL","process","interceptors","response","use","error","status","logger","toast","Promise","reject","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","login","email","password","a","http","localStorage","setItem","loginWithJwt","getCurrentUser","getItem","jwtDecode","ex","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","isAdmin","push","movies","paginate","pageNumber","startIndex","slice","take","value","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","SearchBox","onChange","type","name","placeholder","e","currentTarget","getGenres","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","respnse","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","register","Register","userService","auth","Logout","removeItem","ProtectedRoute","component","render","Route","App","Switch","RegisterForm","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","REACT_APP_NAME","ReactDOM","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.2e945e03.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange} = props;\r\n    console.log(currentPage)\r\n\r\n\r\n\r\n    \r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return ( <nav>\r\n        <ul className=\"pagination\">\r\n        { pages.map(page => ( \r\n            <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\r\n                <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                    {page}</a>\r\n                </li>\r\n        ))}\r\n        </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\nPagination.propTypes={\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired, \r\n    currentPage: PropTypes.number.isRequired, \r\n    onPageChange:PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pagination;","import React from 'react';\r\n\r\nconst ListGroup = props => {\r\n\r\n    const { items, \r\n        textProperty, \r\n        valueProperty, \r\n        selectedItem, \r\n        onItemSelect \r\n    } = props;\r\n\r\n\r\n    return (\r\n    <ul className=\"list-group\">\r\n        { items.map(item => (\r\n        <li \n        onClick={() => onItemSelect(item)}\n        key={item[valueProperty]} \n        className={ item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\n        >\n\n          {item[textProperty]}\r\n        </li>\r\n        ))}\r\n </ul>\r\n    )\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: 'name',\r\n    valueProperty: '_id'\r\n};\r\n\r\nexport default ListGroup\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n     const sortColumn = {...this.props.sortColumn};\r\n      if (sortColumn.path === path)\r\n        sortColumn.order = (sortColumn.order === 'asc') ? 'desc': 'asc';\r\n      else {\r\n        sortColumn.path = path;\r\n        sortColumn.order = 'asc';\r\n      }\r\n      this.props.onSort(sortColumn)\r\n  }\r\n\r\n  renderSortIcon = column => {\r\n      const { sortColumn } = this.props;\r\n\r\n      if (column.path !== sortColumn.path) return null;\r\n      if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n      return <i className=\" fa fa-sort-desc\"></i>\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n    <thead>\r\n        <tr>\r\n            { this.props.columns.map(column => (\r\n            <th\r\n            className=\"clickable\"\r\n            key={column.path || column.key} onClick={() => this.raiseSort(column.path)}>{column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n            ))}\r\n        </tr>\r\n    </thead>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item)\r\n\r\n        return _.get(item, column.path)\r\n    }\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key)\r\n    }\r\n\r\n    render() { \r\n        const { data, columns } = this.props;\r\n       return (<tbody>\r\n           {data.map(item =>(\r\n                <tr key={item._id}>\r\n                {columns.map(column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>);\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody'\r\n\r\nconst Table = ({ columns,  sortColumn, onSort, data}) => {\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort}/>\r\n            <TableBody columns={columns} data={data}/>\r\n            </table>\r\n     );\r\n}\r\n \r\nexport default Table;","// import React, { Component } from 'react';\n\nconst Like = props => {\n        let classes = \"fa fa-heart\"; \n        if (!props.liked) classes += \"-o\";\n        return (<i onClick={props.onClick} style={{ cursor: 'pointer' }} className={classes} aria-hidden=\"true\"></i> );\n        \n}\n \nexport default Like; \n","import axios from \"axios\"\r\nimport logger from './logService'\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && \r\n    error.response.status >= 400 && \r\n    error.response.status < 500;\r\n  \r\n    if(!expectedError) {\r\n      logger.log(error)\r\n      toast.error(\"An unexpected error occurred\")\r\n    }\r\n    return Promise.reject(error);\r\n  })\r\n\r\n  function setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n  }\r\n\r\n  export default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n  }","\r\nimport http from './httpService'\r\nimport jwtDecode  from 'jwt-decode';\r\nconst apiEndpoint = \"/auth\"\r\nconst tokenKey = 'token'\r\n\r\nhttp.setJwt(getJwt())\r\n\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password })\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n      const jwt = localStorage.getItem(tokenKey)\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(\"token\");\r\n}","import React, {  Component } from 'react';\nimport Table from './common/table'\nimport Like from './common/like';\nimport { Link } from 'react-router-dom';\nimport {getCurrentUser} from '../services/authService'\n\nclass MoviesTable extends Component {\n  columns = [\n    { path: 'title', label:  'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\n    { path: 'genre.name', label:  'Genre'},\n    { path: 'numberInStock', label:  'Stock'},\n    { path: 'dailyRentalRate', label:  'Rate'},\n    { key: 'like', content: movie => (<Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />)},\n  ]\n\n  deleteColumn = {\n         key: 'delete', \n          content: movie => (\n          <button \n          onClick={() => this.props.onDelete(movie)} \n          className=\"btn btn-danger btn-sm\"\n          >Delete</button>\n          )\n        }\n\nconstructor() {\n  super()\n  const user = getCurrentUser();\n  if (user && user.isAdmin) this.columns.push(this.deleteColumn)\n}\n\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n\n\n\n  return ( \n      <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort}/>\n   );\n  }\n}\n\nexport default MoviesTable;","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import http from './httpService'\r\nconst apiEndpoint = \"/movies\"\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint)\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId))\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = {...movie};\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body)\r\n    }\r\n\r\n    return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId))\r\n}","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange}) => {\r\n    return ( \r\n        <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import http from \"./httpService\";\r\n\r\n\r\n export function getGenres() {\r\n    return http.get('/genres')\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Pagination from './common/pagination'\r\nimport ListGroup from './common/listGroup'\r\nimport MoviesTable from './moviesTable'\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport _ from 'lodash'\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from './common/searchBox';\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        searchQuery: \"\",\r\n        selectedGenre: null,\r\n        sortColumn: { path: 'title', order: 'asc'}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { data } = await getGenres();\r\n        const genres = [{ _id: \"\", name: 'All Genres'}, ...data]\r\n\r\n        const { data: movies } = await getMovies();\r\n        this.setState({ movies, genres})\r\n    }\r\n\r\n    handleDelete = async movie => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(m => m._id !== movie._id);\r\n        this.setState({ movies });\r\n\r\n    try {\r\n        await deleteMovie(movie._id);\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                toast.error('This has already been deleted')\r\n            \r\n            this.setState({ movies: originalMovies })\r\n        }\r\n    };\r\n\r\n    handleLike = movie => {\r\n        const movies = [...this.state.movies];\r\n        const index  = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]}\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies });\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({ currentPage : page })\r\n    }\r\n\r\n    handleGenreSelect = genre => {\r\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 })\r\n    }\r\n\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n    }\r\n\r\n    handleSort = sortColumn => {\r\n     \r\n     this.setState({ sortColumn })\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currentPage, sortColumn, selectedGenre, movies: allMovies, searchQuery } = this.state;\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n        filtered = allMovies.filter(m =>\r\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n        )\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n            \r\n          ? allMovies.filter(m => m.genre._id === selectedGenre._id) \r\n          : allMovies;\r\n\r\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\r\n\r\n      const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n      return { totalCount: filtered.length, data: movies }\r\n\r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn, searchQuery} = this.state;\r\n        const { user } = this.props;\r\n\r\n        // if (count === 0) \r\n        //     return <p>There are no movies in the database</p>;\r\n\r\n        const {totalCount, data: movies} = this.getPagedData();\r\n\r\n        return (\r\n    <div className=\"row\">\r\n        <div className=\"col-2\">\r\n            <ListGroup\r\n             items={this.state.genres}\r\n             selectedItem={this.state.selectedGenre}\r\n             onItemSelect={this.handleGenreSelect}\r\n             /> \r\n        </div> \r\n        <div className=\"col\">\r\n            {user && (<Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n              >\r\n                  New Movie\r\n              </Link>)}\r\n\r\n\r\n        <p>{totalCount} movies showing </p>\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n        <MoviesTable \r\n          movies={movies} \r\n          sortColumn={sortColumn}\r\n          onLike={this.handleLike} \r\n          onDelete={this.handleDelete}\r\n          onSort={this.handleSort}\r\n          />\r\n            <Pagination \r\n            itemsCount={totalCount} \r\n            pageSize={pageSize}  \r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n            />\r\n            </div>   \r\n\r\n\r\n        \r\n\r\n    </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Movies;\r\n","import React from 'react';\r\n\r\nconst Input = ({name, label, error, ...rest }) => {\r\n    return (\r\n         <div className=\"form-group\">\r\n    <label htmlFor={name}>{ label }</label>\r\n<input \r\n{...rest}\r\nname={name}\r\nid={name}\r\nclassName=\"form-control\"/>\r\n {error && <div className=\"alert alert-danger\">{error}</div>}\r\n</div>\r\n );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\" />\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Select;","import { Component } from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport Select from './select'\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n     }\r\n     validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n\r\n    validateProperty = ({name, value}) => {\r\n        const obj = { [name]: value}\r\n        const schema = { [name]: this.schema[name] };\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n  \r\n        this.setState({ errors: errors || {} })\r\n        if (errors) return;\r\n        \r\n        this.doSubmit();\r\n\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input}) => {\r\n        const errors = {...this.state.errors}\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name]\r\n\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value\r\n        this.setState({ data, errors })\r\n    };\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state\r\n    return (\r\n    <Select\r\n    name={name}\r\n    value={data[name]} \r\n    label={label}\r\n    options={options}\r\n    onChange={this.handleChange} \r\n    error={errors[name]}\r\n    />\r\n    )\r\n    }\r\n\r\n    renderButton(label) {\r\n        return (<button\r\n        disabled={this.validate()}\r\n        className=\"btn btn-primary\">{label}</button>)\r\n    }\r\n\r\n    renderInput(name, label, type = 'text') { \r\n    const { data, errors } = this.state\r\n\r\n    return (\r\n    <Input\r\n    type={type}\r\n    name={name}\r\n    value={data[name]} \r\n    label={label}\r\n    onChange={this.handleChange} \r\n    error={errors[name]}\r\n    />\r\n    )\r\n}\r\n\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport Joi from 'joi-browser'\r\nimport Form from './common/form'\r\nimport { getMovie, saveMovie } from \"../services/movieService\"\r\nimport { getGenres } from \"../services/genreService\"\r\n\r\nclass MovieForm extends Form{\r\n    state = {\r\n       data: {\r\n           title: \"\",\r\n           genreId: \"\",\r\n           numberInStock: \"\",\r\n           dailyRentalRate: \"\"\r\n       },\r\n       genres: [],\r\n       errors: {}\r\n    }\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label(\"Title\"),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label(\"Genre\"),\r\n        numberInStock: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label(\"Number In Stock\"),\r\n        dailyRentalRate: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label(\"Daily Rental Rate\")\r\n    }\r\n\r\n    async populateGenres() {\r\n        const {data: genres} = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n    async populateMovie() {\r\n        const movieId = this.props.match.params.id;\r\n        if (movieId === \"new\") return;\r\n        try {\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) })\r\n        } catch (ex) {\r\n            if (ex.respnse && ex.response.status === 404) \r\n            this.props.history.replace(\"/not-found\")\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        await this.populateGenres();\r\n        await this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        }\r\n    }\r\n\r\n    \r\n    doSubmit = async() => {\r\n        await saveMovie(this.state.data);\r\n\r\n        this.props.history.push(\"/movies\")\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    render() { \r\n\r\n\r\n        return ( \r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return  <h1>Customers</h1>;\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return  <h1>Rentals</h1>;\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <div>\r\n    <center><h1>404 - Not Found</h1><h3>This page that you are looking for is not found</h3></center>\r\n    </div>;\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport '../styles.css'\r\n\r\nconst NavBar = ({ user }) => {\r\nconsole.log(\"Navbar User\")\r\nconsole.log(user)\r\n    return ( \r\n        <nav class=\"navbar\" className=\"navbar sticky-top navbar-expand-lg navbar-light bg-light\">\r\n    <Link className=\"navbar-brand\" to=\"/movies\">Magenta Box</Link>\r\n    <button \r\n    className=\"navbar-toggler\" \r\n    type=\"button\" \r\n    data-toggle=\"collapse\" \r\n    data-target=\"#navbarNavAltMarkup\" \r\n    aria-controls=\"navbarNavAltMarkup\" \r\n    aria-expanded=\"false\" \r\n    aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"nav navbar-nav\">\r\n\r\n          <NavLink className=\"nav-link active\" to=\"/movies\">Movies</NavLink>\r\n          <NavLink className=\"nav-link nav-item\" to=\"/customers\">Customers</NavLink>\r\n  \r\n          <NavLink className=\"nav-link nav-item\" to=\"/rentals\">Rentals</NavLink>\r\n      </ul>\r\n          \r\n    <ul className=\"nav navbar-nav ml-auto\">\r\n            {user && <React.Fragment><NavLink className=\"nav-link nav-item\" to=\"/profile\">\r\n            {user.name}\r\n            </NavLink>\r\n            <NavLink className=\"nav-link nav-item\" to=\"/logout\">\r\n            Logout\r\n            </NavLink></React.Fragment>}\r\n          {!user && <React.Fragment><NavLink className=\"nav-link nav-item\" to=\"/login\">\r\n            Login\r\n            </NavLink>\r\n            <NavLink className=\"nav-link nav-item\" to=\"/register\">\r\n            Register\r\n            </NavLink>\r\n            </React.Fragment>}\r\n      </ul>\r\n    </div>\r\n</nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getCurrentUser, login } from '../services/authService';\r\nimport { toast } from 'react-toastify';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form{\r\n    state = {\r\n        data: {username: \"\", password: \"\"},\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n        .required()\r\n        .label('Username'),\r\n        password: Joi.string()\r\n        .required()\r\n        .min(5)\r\n        .label('Password')\r\n    }\r\n\r\n    \r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state\r\n            await login(data.username, data.password);\r\n\r\n           const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : '/'\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = {...this.state.errors}\r\n                toast.error(ex.response.data)\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    render() { \r\n        if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n\r\n        return ( \r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n               {this.renderInput('username', 'Username')}\r\n               {this.renderInput('password', 'Password', \"password\")}\r\n                <br/>\r\n                {this.renderButton('Login')}\r\n            </form>\r\n        </div>) ;\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import http from './httpService'\r\nconst apiEndpoint = \"/users\"\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}","import React from 'react';\r\n// import Input from './common/input';\r\nimport * as auth from '../services/authService'\r\nimport Joi from 'joi-browser'\r\nimport Form from './common/form'\r\nimport * as userService from '../services/userService'\r\n// import { toast } from 'react-toastify';\r\nclass Register extends Form{\r\n    state = {\r\n        data: {username: \"\", password: \"\", name: \"\"},\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n        .required()\r\n        .email()\r\n        .label('Username'),\r\n       password: Joi.string()\r\n        .required()\r\n        .min(5)\r\n        .label('Password'),\r\n        name: Joi.string()\r\n        .required()\r\n        .label('Name')\r\n    }\r\n\r\n    \r\n    doSubmit = async () => {\r\n        try {\r\n          const response = await userService.register(this.state.data);\r\n          auth.loginWithJwt(response.headers['x-auth-token']);\r\n          this.props.history.replace(\"/movies\")\r\n        } catch (ex) {\r\n          if (ex.response && ex.response.status === 400) {\r\n            const errors = { ...this.state.errors };\r\n            errors.username = ex.response.data;\r\n            this.setState({ errors })\r\n      }\r\n    }\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() { \r\n        return ( \r\n        <div>\r\n            <h1>Register</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n               {this.renderInput('username', 'Username')}\r\n               {this.renderInput('password', 'Password', \"password\")}\r\n               {this.renderInput('name', 'Full Name')}\r\n                <br/>\r\n                {this.renderButton('Register')}\r\n            </form>\r\n        </div>) ;\r\n    }\r\n    }\r\n\r\n \r\nexport default Register;","import { Component } from 'react';\r\nimport { logout } from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        logout();\r\n        window.location = '/';\r\n    }\r\n\r\n\r\n    render() { \r\n        \r\n        return null;\r\n    }\r\n}\r\nexport default Logout;","import React from 'react';\r\nimport { getCurrentUser } from '../../services/authService';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return ( \r\n        <Route \r\n      {...rest}\r\n      render={props => {\r\n\r\n        if (!getCurrentUser()) return <Redirect to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location}\r\n        }}/>\r\n        return Component ? <Component {...props}/> : render(props);\r\n      }}/>\r\n    );\r\n}\r\n \r\nexport default ProtectedRoute;","  \r\nimport React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Movies from \"./components/movies\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport NotFound from \"./components/notFound\";\r\nimport NavBar from \"./components/navBar\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport Logout from \"./components/logout\";\r\n\r\nimport * as auth from \"./services/authService\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n    this.setState({ user });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <NavBar user={this.state.user} />\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/register\" component={RegisterForm} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\r\n            <Route\r\n              path=\"/movies\"\r\n              render={props => <Movies {...props} user={this.state.user} />}\r\n            />\r\n            <Route path=\"/customers\" component={Customers} />\r\n            <Route path=\"/rentals\" component={Rentals} />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect from=\"/\" exact to=\"/movies\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME)\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}